// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kolos2.Entities;

namespace kolos2.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20220614105633_Added Album, Musican, MusicanTrack, MusicanLabel, Track")]
    partial class AddedAlbumMusicanMusicanTrackMusicanLabelTrack
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("kolos2.Entities.Models.Album", b =>
                {
                    b.Property<int>("IdAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IdMusicLabel")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAlbum");

                    b.HasIndex("IdMusicLabel");

                    b.ToTable("Album");

                    b.HasData(
                        new
                        {
                            IdAlbum = 1,
                            AlbumName = "ASSSSSS",
                            IdMusicLabel = 1,
                            PublishDate = new DateTime(2022, 6, 14, 12, 56, 32, 543, DateTimeKind.Local).AddTicks(7130)
                        });
                });

            modelBuilder.Entity("kolos2.Entities.Models.MusicLabel", b =>
                {
                    b.Property<int>("IdMusicLabel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMusicLabel");

                    b.ToTable("MusicLabel");

                    b.HasData(
                        new
                        {
                            IdMusicLabel = 1,
                            Name = "FajnaLista"
                        });
                });

            modelBuilder.Entity("kolos2.Entities.Models.Musican", b =>
                {
                    b.Property<int>("IdMusican")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NickName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdMusican");

                    b.ToTable("Musican");

                    b.HasData(
                        new
                        {
                            IdMusican = 1,
                            FirstName = "Michal",
                            LastName = "Kowalski",
                            NickName = "Kowalski"
                        });
                });

            modelBuilder.Entity("kolos2.Entities.Models.MusicanTrack", b =>
                {
                    b.Property<int>("IdMusican")
                        .HasColumnType("int");

                    b.Property<int>("IdTrack")
                        .HasColumnType("int");

                    b.HasKey("IdMusican", "IdTrack");

                    b.HasIndex("IdTrack");

                    b.ToTable("MusicanTrack");

                    b.HasData(
                        new
                        {
                            IdMusican = 1,
                            IdTrack = 1
                        });
                });

            modelBuilder.Entity("kolos2.Entities.Models.Track", b =>
                {
                    b.Property<int>("IdTrack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Duration")
                        .HasColumnType("real");

                    b.Property<int>("IdMusicAlbum")
                        .HasColumnType("int");

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdTrack");

                    b.HasIndex("IdMusicAlbum");

                    b.ToTable("Track");

                    b.HasData(
                        new
                        {
                            IdTrack = 1,
                            Duration = 1.5f,
                            IdMusicAlbum = 1,
                            TrackName = "Magdalenek"
                        });
                });

            modelBuilder.Entity("kolos2.Entities.Models.Album", b =>
                {
                    b.HasOne("kolos2.Entities.Models.MusicLabel", "MusicLabel")
                        .WithMany("Album")
                        .HasForeignKey("IdMusicLabel")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("MusicLabel");
                });

            modelBuilder.Entity("kolos2.Entities.Models.MusicanTrack", b =>
                {
                    b.HasOne("kolos2.Entities.Models.Musican", "Musican")
                        .WithMany("MusicanTrack")
                        .HasForeignKey("IdMusican")
                        .IsRequired();

                    b.HasOne("kolos2.Entities.Models.Track", "Track")
                        .WithMany("MusicanTrack")
                        .HasForeignKey("IdTrack")
                        .IsRequired();

                    b.Navigation("Musican");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("kolos2.Entities.Models.Track", b =>
                {
                    b.HasOne("kolos2.Entities.Models.Album", "Album")
                        .WithMany("Track")
                        .HasForeignKey("IdMusicAlbum")
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("kolos2.Entities.Models.Album", b =>
                {
                    b.Navigation("Track");
                });

            modelBuilder.Entity("kolos2.Entities.Models.MusicLabel", b =>
                {
                    b.Navigation("Album");
                });

            modelBuilder.Entity("kolos2.Entities.Models.Musican", b =>
                {
                    b.Navigation("MusicanTrack");
                });

            modelBuilder.Entity("kolos2.Entities.Models.Track", b =>
                {
                    b.Navigation("MusicanTrack");
                });
#pragma warning restore 612, 618
        }
    }
}
